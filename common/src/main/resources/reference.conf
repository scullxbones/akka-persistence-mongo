akka {
  contrib {
    persistence {
      mongodb {
        mongo {
          // legacy approach
          urls = [ "localhost:27017" ]
          db = "akka-persistence"

          // mongouri = "mongodb://localhost:27017/akka-persistence"

          journal-collection = "akka_persistence_journal"
          journal-index = "akka_persistence_journal_index"
          journal-seq-nr-index = "akka_persistence_journal_seq_nr_index"
          # Write concerns are one of: Unacknowledged, Acknowledged, Journaled, ReplicaAcknowledged
          journal-write-concern = "Journaled"
          journal-wtimeout = 3s
          journal-fsync = false
          journal-automatic-upgrade = false
          journal-read-fill-limit = 1000

          snaps-collection = "akka_persistence_snaps"
          snaps-index = "akka_persistence_snaps_index"
          snaps-write-concern = "Journaled"
          snaps-wtimeout = 3s
          snaps-fsync = false

          realtime-enable-persistence = true
          realtime-collection = "akka_persistence_realtime"
          realtime-collection-size = 104857600 // 100MB

          breaker {
            maxTries = 5
            timeout {
              call = 5s
              reset = 5s
            }
          }

          use-legacy-serialization = false
        }
      }
    }
  }
}

akka-contrib-persistence-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 2
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 2.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

# The following line will enable this plugin for journalling
# akka.persistence.journal.plugin = "akka-contrib-mongodb-persistence-journal"

akka-contrib-mongodb-persistence-journal {
  # Class name of the plugin.
  class = "akka.contrib.persistence.mongodb.MongoJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka-contrib-persistence-dispatcher"
}

# The following line will enable this plugin for snapshotting
# akka.persistence.snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"

akka-contrib-mongodb-persistence-snapshot {
  # Class name of the plugin.
  class = "akka.contrib.persistence.mongodb.MongoSnapshots"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka-contrib-persistence-dispatcher"
}

# The following line will enable this plugin for read journal queries
# val readJournal = PersistenceQuery(actorSystem).readJournalFor("akka-contrib-mongodb-persistence-readjournal")

akka-contrib-mongodb-persistence-readjournal {
  # Class name of the plugin.
  class = "akka.contrib.persistence.mongodb.MongoReadJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka-contrib-persistence-dispatcher"
}
